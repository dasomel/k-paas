adminPassword: "{REPOSITORY_PASSWORD}"

exposureType: ingress

service:
  type: ClusterIP

ingress:
  core:
    ingressClassName: "{INGRESS_CLASS_NAME}"
    hostname: "{REPOSITORY_HOST}"
    tls: true
    extraTls:
      - hosts:
          - "{HOST_DOMAIN}"
        secretName: "{TLS_SECRET}"

externalURL: "{REPOSITORY_URL}"

persistence:
  enabled: true
  registry:
    storageClass: "{REPOSITORY_STORAGECLASS}"
    size: 20Gi
  jobservice:
    jobLog:
      storageClass: "{REPOSITORY_STORAGECLASS}"
  database:
    storageClass: "{REPOSITORY_STORAGECLASS}"
  redis:
    storageClass: "{REPOSITORY_STORAGECLASS}"
  trivy:
    storageClass: "{REPOSITORY_STORAGECLASS}"

ipFamily:
  ipv6:
    enabled: {IPV6_ENABLED}

nginx:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/edge
                operator: DoesNotExist
portal:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/edge
                operator: DoesNotExist
core:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/edge
                operator: DoesNotExist
jobservice:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/edge
                operator: DoesNotExist
registry:
  credentials:
    username: admin
    password: Harbor12345
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/edge
                operator: DoesNotExist
trivy:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/edge
                operator: DoesNotExist
database:
  internal:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node-role.kubernetes.io/edge
                  operator: DoesNotExist
redis:
  internal:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node-role.kubernetes.io/edge
                  operator: DoesNotExist
exporter:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/edge
                operator: DoesNotExist